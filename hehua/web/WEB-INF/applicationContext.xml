<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
	   xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.1.xsd
                    http://www.springframework.org/schema/cache
                    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
                    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd ">

	<!-- 配置数据源
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost/test_ssh"></property>
		<property name="username" value="root"></property>
		<property name="password" value="1"></property>
	</bean>
	 -->
	<!-- mssql 分页需要
			<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>


	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
		<property name="username" value="cnide"></property>
		<property name="password" value="cnide"></property>
	</bean>
	-->
	<context:property-placeholder location="classpath:dbconf.properties" />


	<!-- 1. 数据源 : DriverManagerDataSource-->

	<bean id="dataSource"
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/formdesign" />
		<property name="username" value="root" />
		<property name="password" value="oa.oracle" />
	</bean>


	<context:component-scan base-package="net.plugins.*"/>

	<!--集成 mybatis 部分 start-->
	<!-- 集成mybatis org.mybatis.spring.SqlSessionFactoryBean-->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql"/>
				</bean>
			</array>
		</property>
		<!-- 全局配置注入 -->
		<!--<property name="globalConfig" ref="globalConfig" />-->
	</bean>



	<!-- 采用自动扫描方式创建mapper bean(单个更新模式)
	<bean id="baseBeanMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.plugins.mapper" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateSimple" />
	</bean>-->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.plugins.mapper"></property>
		<!--<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>-->
	</bean>

	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!--通过模板定制mybatis的行为 -->
	<!--<bean id="sqlSessionTemplateSimple" class="org.mybatis.spring.SqlSessionTemplate">-->
		<!--<constructor-arg index="0" ref="sqlSessionFactory" />-->
		<!--&lt;!&ndash;更新采用单个模式 &ndash;&gt;-->
		<!--<constructor-arg index="1" value="SIMPLE"/>-->
	<!--</bean>-->

	<!--通过模板定制mybatis的行为 -->
	<!-- <bean id="sqlSessionTemplateBatch" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		更新采用批量模式
		<constructor-arg index="1" value="BATCH"/>
	</bean> -->




	<!--集成 mybatis 部分 end-->





	<!-- 配置事务，使用代理的方式-->
	<bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="txManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="modify*">PROPAGATION_REQUIRED,-myException</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- 缓存配置(两种) -->
	<!-- 启用缓存注解功能(请将其配置在Spring主配置文件中)
	<cache:annotation-driven cache-manager="cacheManager"/>-->
	<!-- Spring自己的基于java.util.concurrent.ConcurrentHashMap实现的缓存管理器(该功能是从Spring3.1开始提供的) -->
	<!--
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean name="myCache" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
            </set>
        </property>
    </bean>
     -->
	<!-- 若只想使用Spring自身提供的缓存器,则注释掉下面的两个关于Ehcache配置的bean,并启用上面的SimpleCacheManager即可 -->
	<!-- Spring提供的基于的Ehcache实现的缓存管理器-->
	<!--<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
		<!--<property name="configLocation" value="classpath:ehcache.xml"/>-->
	<!--</bean>-->

	<!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">-->
		<!--<property name="cacheManager" ref="cacheManagerFactory"/>-->
	<!--</bean>-->

	<bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
	</bean>
	<bean class="myshiro.DefaultExceptionHandler"/>

</beans>