<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--shior start-->
    <!--开启这个cacheManager后，要禁用applicationContext.xml另一个cacheManager-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>
    <bean id="passwordHelper" class="myshiro.PasswordHelper">
    </bean>
    <!-- 凭证匹配器 -->
    <!--<bean id="credentialsMatcher" class="myshiro.RetryLimitSimpleCredentialsMatcher">-->
    <!--<constructor-arg ref="cacheManager"/>-->
    <!--<property name="passwordHelper" ref="passwordHelper"/>-->
    <!--</bean>-->

    <bean id="credentialsMatcher" class="myshiro.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="MD5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
    <!--<bean id="shiro_user_dao2" class="myshiro.UserDAO">-->
    <!--<property name="jt" ref="jdbcTemplate"/>-->
    <!--</bean>-->
    <bean id="userService" class="net.plugins.service.UserServiceImpl"/>
    <bean id="userRealm" class="myshiro.UserRealm">
        <!--<property name="userDAO" ref="shiro_user_dao"/>-->
        <property name="userService" ref="userService" />
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <!--密码校验接口-->
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180000"/>
    </bean>
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/>
        <!-- 30天 -->
    </bean>
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!--会话验证调度器-->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 全局的会话信息检测扫描信息间隔30分钟-->
    <bean id="sessionValidationScheduler23" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
    <!-- 安全管理器 -->


    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>


    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
    <!--<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityMananger"/>-->
    <!--<property name="arguments" ref="securityManager"/>-->
    <!--</bean>-->


    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login.jsp"/>
    </bean>

    <bean id="kickoutSessionControlFilter" class="myshiro.filter.KickoutSessionControlFilter">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="kickoutAfter" value="false"/>
        <property name="maxSession" value="2"/>
        <property name="kickoutUrl" value="/login.jsp?kickout=1"/>
    </bean>
    <bean id="sysUserFilter" class="myshiro.filter.SysUserFilter"/>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.jsp"/>
        <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->
        <property name="successUrl" value="/adduser.jsp" />
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <map>
                <!--<entry key="authc">-->
                <!--<bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/>-->
                <!--</entry>-->
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="sysUser" value-ref="sysUserFilter"/>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
                <entry key="logout" value-ref="logoutFilter" />
            </map>
            <!--
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </util:map>
            -->
        </property>
        <property name="filterChainDefinitions">
            <value>
                /index.jsp = anon
                /index.html = anon
                /validcode.jsp = anon
                /static/** = anon
                /js/** = anon
                /img/** = anon
                /ref/** = anon
                /resources/** = anon
                /unauthorized.jsp = anon
                #/login/checklogin = authc
                /authenticated = authc
                /login.jsp = authc
                /checklogin.* = anon
                /login/logoutlogout = logout
                /** =kickout,user,sysUser
            </value>
        </property>
    </bean>
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login.jsp" />
    </bean>
    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


    <!--shior  end -->

</beans>